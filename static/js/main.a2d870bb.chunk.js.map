{"version":3,"sources":["comps/ChangeColors.jsx","comps/Bars.jsx","comps/Nav.jsx","comps/shapes.jsx","comps/Content.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["ChangeColors","id","viewBox","clipPathUnits","d","fill","strokeWidth","transform","clipPath","Bars","Nav","useState","barsToggle","setBarsToggle","className","undefined","onClick","href","shape","min","max","generate","this","shapes","colorArgs","shapeClass","length","Array","cx","cy","r","slice","splice","reverse","Content","props","schemes","map","scheme","index","key","join","shapeID","colors","color","App","state","schemesIsLoaded","fetch","host","then","res","json","setState","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a2d870bb.chunk.js","sourcesContent":["import React from \"react\";\n\nvar wheelSVG = () => (\n  <svg id=\"change-colors\" viewBox=\"0 0 52.917 52.917\">\n    <defs>\n      <clipPath clipPathUnits=\"userSpaceOnUse\" id=\"wheel_svg__a\">\n        <path\n          d=\"M806.143-297.341a13.23 13.23 0 00-13.23 13.23 13.23 13.23 0 0013.23 13.228 13.23 13.23 0 0013.23-13.229 13.23 13.23 0 00-13.23-13.229zm0 8.82a4.41 4.41 0 014.41 4.41 4.41 4.41 0 01-4.41 4.409 4.41 4.41 0 01-4.41-4.41 4.41 4.41 0 014.41-4.41z\"\n          fill=\"#ff0\"\n          strokeWidth={0.053}\n        />\n      </clipPath>\n    </defs>\n    <g\n      transform=\"matrix(2 0 0 2.00002 -1585.829 594.689)\"\n      clipPath=\"url(#wheel_svg__a)\"\n    >\n      <path\n        d=\"M819.372-291.75l-13.229 7.638v13.23h13.23v-20.868\"\n        fill=\"#ff2929\"\n      />\n      <path\n        d=\"M806.143-270.883v-13.229l-13.229-7.638v20.867h13.229\"\n        fill=\"#3b8aff\"\n      />\n      <path d=\"M813.78-270.883h-15.275l7.638-13.23z\" fill=\"#991ef9\" />\n      <path\n        d=\"M806.143-284.112l-13.229-7.638v-5.591h26.458v5.591l-13.229 7.638\"\n        fill=\"#fad02e\"\n      />\n      <path d=\"M806.143-284.112h-15.276l7.638-13.229z\" fill=\"#91fa49\" />\n      <path d=\"M821.419-284.112h-15.276l7.638-13.229z\" fill=\"#ff7a29\" />\n    </g>\n  </svg>\n);\n\nexport default function ChangeColors() {\n  return <>{wheelSVG()}</>;\n}\n","import React from \"react\";\n\nexport default function Bars() {\n  return (\n    <svg viewBox=\"0 0 448 512\">\n      <path d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\" />\n    </svg>\n  );\n}\n","import React, { useState } from \"react\";\nimport ChangeColors from \"./ChangeColors\";\nimport Bars from \"./Bars\";\n\nexport default function Nav() {\n  const [barsToggle, setBarsToggle] = useState(false);\n\n  return (\n    <div className={barsToggle ? \"mobile-nav\" : undefined} id=\"nav\">\n      <div id=\"bars\" onClick={() => setBarsToggle(!barsToggle)}>\n        <Bars />\n      </div>\n      <div id=\"links\">\n        <a className=\"active\" href=\"/\">\n          Colors\n        </a>\n        <a href=\"/\">Explore</a>\n        <a href=\"/\">Create</a>\n        <a href=\"/\">FeedBack</a>\n      </div>\n      <ChangeColors />\n    </div>\n  );\n}\n","import React from \"react\";\n\nclass shape {\n  constructor(min, max, generate) {\n    this.min = min;\n    this.max = max;\n    this.generate = generate;\n  }\n}\n\nvar shapes = [\n  //drop\n  new shape(2, 3, (colorArgs, shapeClass = \"\") => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, colorArgs[1]];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path\n          d=\"M26.458 47.569c-7.987 0-14.486-6.499-14.486-14.486 0-3.52 2.287-9.192 6.796-16.857a158.066 158.066 0 016.684-10.36 1.237 1.237 0 012.013 0c.033.046 3.382 4.746 6.684 10.36 4.51 7.665 6.795 13.337 6.795 16.857 0 7.987-6.498 14.486-14.486 14.486z\"\n          fill={colorArgs[1]}\n        />\n        <path\n          d=\"M26.458 47.569V5.348c.4 0 .775.193 1.007.518.033.046 3.382 4.746 6.684 10.36 4.51 7.665 6.795 13.337 6.795 16.857 0 7.987-6.498 14.486-14.486 14.486z\"\n          fill={colorArgs[2]}\n        />\n      </svg>\n    );\n  }),\n\n  //windmill\n  new shape(2, 5, (colorArgs, shapeClass = \"\") => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, ...new Array(3).fill(colorArgs[1])];\n        break;\n      case 3:\n        colorArgs = [...colorArgs, ...new Array(2).fill(colorArgs[2])];\n        break;\n      case 4:\n        colorArgs = [...colorArgs, colorArgs[3]];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path\n          d=\"M19.844 6.615a13.23 13.23 0 00-13.23 13.229 13.23 13.23 0 0013.23 13.229z\"\n          fill={colorArgs[4]}\n        />\n        <path\n          d=\"M6.614 33.073a13.23 13.23 0 0013.23 13.23 13.23 13.23 0 0013.229-13.23z\"\n          fill={colorArgs[1]}\n        />\n        <path\n          d=\"M33.073 46.302a13.23 13.23 0 0013.229-13.229 13.23 13.23 0 00-13.23-13.23z\"\n          fill={colorArgs[3]}\n        />\n        <path\n          d=\"M46.302 19.844a13.23 13.23 0 00-13.23-13.23 13.23 13.23 0 00-13.228 13.23z\"\n          fill={colorArgs[2]}\n        />\n      </svg>\n    );\n  }),\n\n  //vinil\n  new shape(2, 5, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, ...new Array(3).fill(colorArgs[0])];\n        break;\n      case 3:\n      case 4:\n        colorArgs = [\n          ...colorArgs,\n          ...new Array(5 - colorArgs.length).fill(\n            colorArgs[colorArgs.length - 1]\n          ),\n        ];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <g transform=\"translate(0 -244.083)\">\n          <path fill={colorArgs[0]} d=\"M0 244.083h52.917V297H0z\" />\n          <circle cx={26.458} cy={270.542} fill={colorArgs[2]} r={21.111} />\n          <circle cx={26.458} cy={270.542} fill={colorArgs[3]} r={14.074} />\n          <circle cy={270.542} cx={26.458} fill={colorArgs[4]} r={7.037} />\n          <path\n            d=\"M52.917 244.083l-26.459 26.459L52.917 297z\"\n            fill={colorArgs[1]}\n          />\n        </g>\n      </svg>\n    );\n  }),\n\n  //squared vinil\n  new shape(3, 5, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 3:\n      case 4:\n        colorArgs = [\n          ...colorArgs,\n          ...new Array(5 - colorArgs.length).fill(\n            colorArgs[colorArgs.length - 1]\n          ),\n        ];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path fill={colorArgs[2]} d=\"M6.681 6.68h39.555v39.556H6.681z\" />\n        <path fill={colorArgs[3]} d=\"M13.361 13.362h26.194v26.194H13.361z\" />\n        <path fill={colorArgs[4]} d=\"M19.844 19.844h13.229v13.229H19.844z\" />\n        <path d=\"M52.917 0L26.458 26.458l26.459 26.459z\" fill={colorArgs[1]} />\n      </svg>\n    );\n  }),\n\n  //horizontal squares\n  new shape(2, 5, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [\n          ...new Array(3).fill(colorArgs[0]),\n          ...new Array(2).fill(colorArgs[1]),\n        ];\n        break;\n      case 3:\n        colorArgs = [\n          ...new Array(2).fill(colorArgs[0]),\n          ...new Array(2).fill(colorArgs[1]),\n          colorArgs[2],\n        ];\n        break;\n      case 4:\n        colorArgs = [colorArgs[0], ...colorArgs];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[4]} d=\"M0 0h52.917v52.917H0z\" />\n        <path fill={colorArgs[3]} d=\"M0 10.584h52.917v42.333H0z\" />\n        <path fill={colorArgs[2]} d=\"M0 21.167h52.917v31.75H0z\" />\n        <path fill={colorArgs[1]} d=\"M0 31.75h52.917v21.167H0z\" />\n        <path fill={colorArgs[0]} d=\"M0 42.334h52.917v10.583H0z\" />\n      </svg>\n    );\n  }),\n\n  //2 squares > 2 triangles + circle\n  new shape(2, 5, function (colorArgs, shapeClass) {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, \"rgba(0, 0, 0, 0)\", ...colorArgs];\n        break;\n      case 3:\n        colorArgs = [...colorArgs, ...colorArgs.slice(0, 2)];\n        break;\n      case 4:\n        colorArgs = [...colorArgs, colorArgs[1]];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <g transform=\"translate(0 -244.083)\">\n          <path fill={colorArgs[4]} d=\"M0 297h52.917v-52.917H0z\" />\n          <path d=\"M0 297h52.917L0 244.083z\" fill={colorArgs[0]} />\n          <path fill={colorArgs[3]} d=\"M39.688 283.771H13.23v-26.458h26.458z\" />\n          <path d=\"M39.688 283.77l-26.459-26.458v26.459z\" fill={colorArgs[1]} />\n          <circle\n            cx={-26.458}\n            cy={-270.542}\n            transform=\"scale(-1)\"\n            fill={colorArgs[2]}\n            r={6.615}\n          />\n        </g>\n      </svg>\n    );\n  }),\n\n  //square > 2 squares + circle > circle\n  new shape(3, 4, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 3:\n        colorArgs.splice(1, 0, \"rgba(0, 0, 0, 0)\");\n        break;\n\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <g transform=\"translate(0 -244.083)\">\n          <path fill={colorArgs[0]} d=\"M0 244.083h52.917V297H0z\" />\n          <path fill={colorArgs[1]} d=\"M0 244.083h52.917v26.458H0z\" />\n          <circle r={21.111} cx={26.458} cy={270.542} fill={colorArgs[2]} />\n          <circle cx={26.458} cy={270.542} fill={colorArgs[3]} r={10.555} />\n        </g>\n      </svg>\n    );\n  }),\n\n  //2 squares > hexagone\n  new shape(2, 3, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, \"rgba(0, 0, 0, 0)\"];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path fill={colorArgs[2]} d=\"M0 0h52.917v26.458H0z\" />\n        <path\n          d=\"M12.24 28.291a3.666 3.666 0 010-3.666l5.522-9.563a3.666 3.666 0 013.175-1.833H31.98a3.666 3.666 0 013.175 1.833l5.522 9.563a3.666 3.666 0 010 3.666l-5.522 9.563a3.666 3.666 0 01-3.175 1.833H20.937a3.666 3.666 0 01-3.175-1.833\"\n          fill={colorArgs[1]}\n        />\n      </svg>\n    );\n  }),\n\n  //4 squares > 4 squares\n  new shape(2, 8, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [\n          ...new Array(4).fill(colorArgs[0]),\n          ...new Array(4).fill(colorArgs[1]),\n        ];\n        break;\n      case 3:\n        colorArgs = [\n          ...new Array(4).fill(colorArgs[0]),\n          ...new Array(2).fill(colorArgs[2]),\n          ...new Array(2).fill(colorArgs[1]),\n          ...colorArgs,\n        ];\n        break;\n      case 4:\n        colorArgs = [...colorArgs, ...colorArgs];\n        break;\n      case 5:\n        colorArgs = [...new Array(3).fill(colorArgs[0]), ...colorArgs];\n        break;\n      case 6:\n        colorArgs = [\n          ...colorArgs.slice(0, 2),\n          ...colorArgs.slice(0, 2),\n          ...colorArgs.slice(2, 6),\n        ];\n        break;\n      case 7:\n        colorArgs = [\n          ...colorArgs.slice(0, 2),\n          colorArgs[0],\n          colorArgs[2],\n          ...colorArgs.slice(3, 7),\n        ];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path fill={colorArgs[3]} d=\"M0 0h52.917v26.458H0z\" />\n        <path fill={colorArgs[1]} d=\"M26.458 26.459h26.458v26.458H26.458z\" />\n        <path fill={colorArgs[2]} d=\"M26.458 0h26.458v26.458H26.458z\" />\n        <path fill={colorArgs[6]} d=\"M13.229 13.23h26.458v26.458H13.229z\" />\n        <path fill={colorArgs[5]} d=\"M13.229 13.23h26.458v13.229H13.229z\" />\n        <path fill={colorArgs[7]} d=\"M26.458 26.459h13.229v13.229H26.458z\" />\n        <path fill={colorArgs[4]} d=\"M26.458 13.23h13.229v13.229H26.458z\" />\n      </svg>\n    );\n  }),\n\n  //circle > circle > circle > circle > circle > circle > circle\n  new shape(4, 4, (colorArgs, shapeClass) => {\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <g transform=\"translate(0 -244.083)\">\n          <path fill={colorArgs[0]} d=\"M0 244.083h52.917V297H0z\" />\n          <circle cx={26.458} cy={270.542} r={22.679} fill={colorArgs[1]} />\n          <circle r={18.899} cy={270.542} cx={26.458} fill={colorArgs[2]} />\n          <circle cx={26.458} cy={270.542} r={15.119} fill={colorArgs[3]} />\n          <circle r={11.34} cy={270.542} cx={26.458} fill={colorArgs[0]} />\n          <circle cx={26.458} cy={270.542} r={7.56} fill={colorArgs[2]} />\n          <circle r={3.78} cy={270.542} cx={26.458} fill={colorArgs[3]} />\n        </g>\n      </svg>\n    );\n  }),\n\n  //square > 4 triangles\n  new shape(2, 4, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, ...colorArgs.reverse()];\n        break;\n      case 3:\n        colorArgs = [...colorArgs, colorArgs[0]];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[2]} d=\"M0 0h52.917v52.917H0z\" />\n        <path fill={colorArgs[0]} d=\"M0 26.459h52.917v26.458H0z\" />\n        <path d=\"M0 52.917l26.458-26.459L0 0v52.917\" fill={colorArgs[3]} />\n        <path\n          d=\"M52.917 52.917L26.458 26.458 52.917 0v52.917\"\n          fill={colorArgs[1]}\n        />\n      </svg>\n    );\n  }),\n\n  //(square > circle > circle) / 4\n  new shape(2, 3, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, \"rgba(0, 0, 0, 0)\"];\n        break;\n      default:\n    }\n\n    return (\n      <svg viewBox=\"0 0 52.917 52.917\">\n        <path d=\"M0 0l52.917 52.917V0H0z\" fill={colorArgs[0]} />\n        <path\n          d=\"M0 0v26.458l26.458 26.459h26.459A52.917 52.917 0 000 0z\"\n          fill={colorArgs[1]}\n        />\n        <path\n          d=\"M0 26.458v26.459h26.458A26.458 26.458 0 000 26.458z\"\n          fill={colorArgs[2]}\n        />\n      </svg>\n    );\n  }),\n\n  //square > 2 triangles > circle > circle > circle\n  new shape(3, 5, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 3:\n      case 4:\n        colorArgs = [\n          ...colorArgs,\n          ...new Array(5 - colorArgs.length).fill(\"rgba(0, 0, 0, 0)\"),\n        ];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <g transform=\"translate(0 -244.083)\">\n          <path fill={colorArgs[0]} d=\"M0 244.083h52.917V297H0z\" />\n          <path d=\"M0 244.083h52.917L0 297z\" fill={colorArgs[1]} />\n          <circle cx={26.458} cy={270.542} fill={colorArgs[2]} r={21.111} />\n          <circle cx={26.458} cy={270.542} fill={colorArgs[3]} r={14.074} />\n          <circle cy={270.542} cx={26.458} fill={colorArgs[4]} r={7.037} />\n        </g>\n      </svg>\n    );\n  }),\n\n  //square > (circle / 4) * 4\n  new shape(2, 5, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, ...new Array(3).fill(colorArgs[1])];\n        break;\n      case 3:\n        colorArgs = [...colorArgs, ...colorArgs.slice(1, 3).reverse()];\n        break;\n      case 4:\n        colorArgs = [...colorArgs, colorArgs[3]];\n        break;\n\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path\n          d=\"M26.458 5.347v21.111H5.348l21.11 21.11c11.66 0 21.11-9.45 21.11-21.11z\"\n          fill={colorArgs[2]}\n        />\n        <path\n          d=\"M5.348 26.458l21.11-21.11c11.66 0 21.11 9.451 21.11 21.11z\"\n          fill={colorArgs[3]}\n        />\n        <path\n          d=\"M26.458 5.347L5.348 26.458c0 11.66 9.451 21.11 21.11 21.11z\"\n          fill={colorArgs[1]}\n        />\n        <path\n          d=\"M26.458 26.458V5.348c-11.659 0-21.11 9.451-21.11 21.11z\"\n          fill={colorArgs[4]}\n        />\n      </svg>\n    );\n  }),\n\n  //square > diamond > diamond\n  new shape(2, 3, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, \"rgba(0, 0, 0, 0)\"];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path\n          fill={colorArgs[1]}\n          d=\"M26.459 7.75l18.708 18.709L26.46 45.167 7.749 26.46z\"\n        />\n        <path\n          fill={colorArgs[2]}\n          d=\"M26.459 17.104l9.354 9.354-9.354 9.354-9.355-9.354z\"\n        />\n      </svg>\n    );\n  }),\n\n  //star made out of circles\n  new shape(2, 2, (colorArgs, shapeClass) => {\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path\n          d=\"M6.615 6.615a19.844 19.844 0 0019.843 19.843A19.844 19.844 0 006.615 6.615zm19.843 19.843A19.844 19.844 0 0046.302 6.615a19.844 19.844 0 00-19.844 19.843zm0 0a19.844 19.844 0 0019.844 19.844 19.844 19.844 0 00-19.844-19.844zm0 0A19.844 19.844 0 006.615 46.302a19.844 19.844 0 0019.843-19.844z\"\n          fill={colorArgs[1]}\n        />\n      </svg>\n    );\n  }),\n\n  //square > 4 rectanlges > circle > circle\n  new shape(5, 6, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 5:\n        colorArgs = [...colorArgs, colorArgs[1]];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <g transform=\"translate(0 -244.083)\">\n          <path fill={colorArgs[3]} d=\"M0 244.083h52.917V297H0z\" />\n          <path fill={colorArgs[2]} d=\"M0 257.313h52.917V297H0z\" />\n          <path fill={colorArgs[1]} d=\"M0 270.542h52.917V297H0z\" />\n          <path fill={colorArgs[0]} d=\"M0 283.771h52.917V297H0z\" />\n          <circle cx={26.458} cy={270.542} r={19.844} fill={colorArgs[4]} />\n          <circle cy={270.542} cx={26.458} fill={colorArgs[5]} r={13.229} />\n        </g>\n      </svg>\n    );\n  }),\n\n  //V\n  new shape(2, 3, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, \"rgba(0, 0, 0, 0)\"];\n        break;\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path d=\"M0 0l23.813 52.917h5.291L52.917 0H0\" fill={colorArgs[1]} />\n        <path\n          d=\"M0 0v52.917h26.458L0 0zm26.458 52.917h26.459V0L26.458 52.917z\"\n          fill={colorArgs[0]}\n        />\n        <path d=\"M9.922 0h33.073L26.458 33.073 9.922 0\" fill={colorArgs[2]} />\n      </svg>\n    );\n  }),\n\n  //Cross\n  new shape(2, 5, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, ...new Array(3).fill(colorArgs[1])];\n        break;\n      case 3:\n        colorArgs = [...colorArgs, ...colorArgs.slice(1, 3)];\n        break;\n      case 4:\n        colorArgs = [...colorArgs, colorArgs[2]];\n        break;\n\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path\n          fill={colorArgs[1]}\n          d=\"M6.614 36.38l9.922-9.923 9.923 9.922-9.923 9.922z\"\n        />\n        <path\n          fill={colorArgs[4]}\n          d=\"M6.615 16.536l9.922-9.922 9.922 9.922-9.922 9.922z\"\n        />\n        <path\n          fill={colorArgs[3]}\n          d=\"M26.458 16.536l9.922-9.922 9.922 9.922-9.922 9.922z\"\n        />\n        <path\n          fill={colorArgs[2]}\n          d=\"M26.459 36.38l9.922-9.923 9.922 9.922-9.922 9.922z\"\n        />\n      </svg>\n    );\n  }),\n\n  //basic 4 squares\n  new shape(2, 4, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, ...colorArgs];\n        break;\n      case 3:\n        colorArgs = [...colorArgs, \"rgba(0, 0, 0, 0)\"];\n        break;\n\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path fill={colorArgs[1]} d=\"M26.458 0h26.458v52.917H26.458z\" />\n        <path fill={colorArgs[3]} d=\"M0 0h52.917v26.458H0z\" />\n        <path fill={colorArgs[2]} d=\"M26.458 0h26.458v26.458H26.458z\" />\n      </svg>\n    );\n  }),\n\n  //star made out of circles\n  new shape(2, 5, (colorArgs, shapeClass) => {\n    switch (colorArgs.length) {\n      case 2:\n        colorArgs = [...colorArgs, ...new Array(3).fill(colorArgs[1])];\n        break;\n      case 3:\n        colorArgs = [...colorArgs, ...colorArgs.slice(1, 3)];\n        break;\n      case 4:\n        colorArgs = [...colorArgs, colorArgs[2]];\n        break;\n\n      default:\n    }\n\n    return (\n      <svg className={shapeClass} viewBox=\"0 0 52.917 52.917\">\n        <path fill={colorArgs[0]} d=\"M0 0h52.917v52.917H0z\" />\n        <path d=\"M0 0v26.458A26.458 26.458 0 0026.458 0z\" fill={colorArgs[4]} />\n        <path\n          d=\"M26.458 0a26.458 26.458 0 0026.459 26.458V0z\"\n          fill={colorArgs[3]}\n        />\n        <path\n          d=\"M52.917 26.458a26.458 26.458 0 00-26.459 26.459h26.459z\"\n          fill={colorArgs[2]}\n        />\n        <path\n          d=\"M0 26.458v26.459h26.458A26.458 26.458 0 000 26.458z\"\n          fill={colorArgs[1]}\n        />\n      </svg>\n    );\n  }),\n];\n\nexport default shapes;\n","import React from \"react\";\nimport shapes from \"./shapes\";\n\nexport default function Content(props) {\n  var { schemes } = props;\n\n  return (\n    <div id=\"content\">\n      {schemes.map((scheme, index) => (\n        <div\n          key={index}\n          className={\n            scheme.transform !== undefined\n              ? `t-${scheme.transform.join(\"-\")}`\n              : undefined\n          }\n        >\n          {shapes[scheme.shapeID].generate(\n            scheme.colors.map((color) => `rgb(${color})`)\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Nav from \"./comps/Nav.jsx\";\nimport Content from \"./comps/Content.jsx\";\n\nconst host = \"http://intense-bastion-87533.herokuapp.com/\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      schemes: [],\n      schemesIsLoaded: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(host + \"schemes\")\n      .then((res) => res.json())\n      .then((json) =>\n        this.setState({\n          schemes: json.schemes,\n          schemesIsLoaded: true,\n        })\n      );\n  }\n\n  render() {\n    return (\n      <>\n        <Nav />\n        <Content schemes={this.state.schemes} />\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}